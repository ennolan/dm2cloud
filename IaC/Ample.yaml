AWSTemplateFormatVersion: 2010-09-09
Description: ""
  
Parameters:
  EnvironmentName: 
    Description: The name of the VPC being created.
    Type: String
    Default: "Ample-Extract"

  VpcCIDR:
    Description: The IPv4 address space, given in CIDR notation, for the VPC hosting the scenario challenge
    Type: String
    Default: "192.168.0.0/16"

  DataCenterPublicSubnetCIDR:
    Description: The IPv4 address space, given in CIDR notation, for the publicly accessible portion of the VPC.
    Type: String
    Default: "192.168.10.0/24"
  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 
        Ref: "VpcCIDR"
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: "Name"
          Value:
            Ref: "EnvironmentName"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: "Name"
          Value: 
            Ref: "EnvironmentName"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: 
        Ref: "InternetGateway"
      VpcId: 
        Ref: "VPC" # Required
      
  DataCenterPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: "eu-west-1" 
      CidrBlock: 
        Ref: "DataCenterPublicSubnetCIDR"
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: "Name"
          Value: "Ample-Extract Data Center Subnet"
      VpcId: 
        Ref: "VPC" # Required

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: "Name"
          Value: "Ample-Extract Public Routes"
      VpcId: 
        Ref: "VPC" # Required

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: "PublicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "InternetGateway"

  DataCenterPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        Ref: "PublicRouteTable"
      SubnetId: 
        Ref: "DataCenterPublicSubnet"

  WindowsInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "This group permits RDP access to an instance deployed within the public subnet of the VPC. " # Required
      GroupName: "Ample-Extract-WindowsInstanceSG"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: "Name"
          Value: "Ample-Extract-WindowsInstanceSG"
      VpcId: 
        Ref: "VPC"

  FileServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "SSH access to the data center file server from an internal source within the VPC." # Required
      GroupName: "Ample-Extract-FileServerSG"
      SecurityGroupIngress: 
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "192.168.10.0/24"
      Tags: 
        - Key: "Name"
          Value: "Ample-Extract-FileServerSG"
      VpcId: 
        Ref: "VPC"

  FileGatewaySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "This security group controls the access to the file gateway instance." # Required
      GroupName: "Ample-Extract-FileGatewaySG"
      SecurityGroupIngress: 
        - IpProtocol: "tcp"
          FromPort: 1
          ToPort: 65534
          CidrIp: "192.168.0.0/16"
      Tags: 
        - Key: "Name"
          Value: "Ample-Extract-FileGatewaySG"
      VpcId: 
        Ref: "VPC"
